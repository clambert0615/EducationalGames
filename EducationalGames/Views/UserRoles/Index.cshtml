@model List<UserRolesView>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1 style="text-align:center">User Roles</h1>
<table style="width:100%" id="userTable" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0">
    <thead>
        <tr class="header">
            <th onclick="sortTable(0)" style="cursor:pointer">First Name</th>
            <th onclick="sortTable(1)" style="cursor:pointer">Last Name</th>
            <th>Email</th>
            <th>Roles</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td class="td1">@user.FirstName</td>
                <td class="td1">@user.LastName</td>
                <td>@user.Email</td>
                <td>@string.Join(" , ", user.Roles.ToList())</td>
                <td>
                    <a class="btn btn-primary" style="background-color:lightblue" onclick="location.href='/UserRoles/Manage?id=@user.UserId'">Manage Roles</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("userTable");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                let xData = x.innerText;
                let yData = y.innerText;
                const isNumeric =
                    xData.indexOf("-") === -1 &&
                    yData.indexOf("-") === -1 &&
                    !isNaN(parseFloat(xData)) &&
                    !isNaN(parseFloat(yData));
                if (dir == "asc") {
                    if ((isNumeric && parseFloat(xData) > parseFloat(yData)) ||
                        (!isNumeric && xData.toLowerCase() > yData.toLowerCase())) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if ((isNumeric && parseFloat(xData) < parseFloat(yData)) ||
                        (!isNumeric && xData.toLowerCase() < yData.toLowerCase())) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
    </script>